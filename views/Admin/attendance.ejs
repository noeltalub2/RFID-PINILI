<% layout('./Layout/layout.ejs') -%>

    <div class="content">
        <h2 class="content-heading">Attendance Overview</h2>
        <form id="employeeAttendance" method="get">
            <div class="row  g-2">

                <div class="col-lg-5">
                    <select class="js-select2 form-select" id="employee_uuid" name="employee_uuid" style="width: 100%;"
                        data-placeholder="Select employee..">
                        <option></option>
                        <!-- Required for data-placeholder attribute to work with Select2 plugin -->
                        <% employees.forEach(employee=> { %>
                            <option value="<%= employee.uuid %>">
                                <%= employee.firstname %>
                                    <%= employee.middlename %>
                                        <%= employee.lastname %>
                            </option>
                            <% }); %>
                    </select>
                </div>
                <div class="col-lg-3">
                    <select id="monthSelect" class="form-control" name="attendanceMonth" onchange="changeMonthYear()">
                        <option value="01" <%=currentMonth==='01' ? 'selected' : '' %>>January</option>
                        <option value="02" <%=currentMonth==='02' ? 'selected' : '' %>>February</option>
                        <option value="03" <%=currentMonth==='03' ? 'selected' : '' %>>March</option>
                        <option value="04" <%=currentMonth==='04' ? 'selected' : '' %>>April</option>
                        <option value="05" <%=currentMonth==='05' ? 'selected' : '' %>>May</option>
                        <option value="06" <%=currentMonth==='06' ? 'selected' : '' %>>June</option>
                        <option value="07" <%=currentMonth==='07' ? 'selected' : '' %>>July</option>
                        <option value="08" <%=currentMonth==='08' ? 'selected' : '' %>>August</option>
                        <option value="09" <%=currentMonth==='09' ? 'selected' : '' %>>September</option>
                        <option value="10" <%=currentMonth==='10' ? 'selected' : '' %>>October</option>
                        <option value="11" <%=currentMonth==='11' ? 'selected' : '' %>>November</option>
                        <option value="12" <%=currentMonth==='12' ? 'selected' : '' %>>December</option>
                    </select>
                </div>

                <div class="col-lg-2">
                    <select id="yearSelect" class="form-control" name="attendanceYear" onchange="changeMonthYear()">
                        <option value="2020" <%=currentYear===2020 ? 'selected' : '' %>>2020</option>
                        <option value="2021" <%=currentYear===2021 ? 'selected' : '' %>>2021</option>
                        <option value="2022" <%=currentYear===2022 ? 'selected' : '' %>>2022</option>
                        <option value="2023" <%=currentYear===2023 ? 'selected' : '' %>>2023</option>
                        <option value="2024" <%=currentYear===2024 ? 'selected' : '' %>>2024</option>
                        <option value="2025" <%=currentYear===2025 ? 'selected' : '' %>>2025</option>
                    </select>
                </div>

                <div class="col-lg-2">
                    <button type="submit" class="btn btn-primary me-1 mb-3 w-100">
                        <i class="fa fa-fw fa-search me-1"></i> Search
                    </button>

                </div>
            </div>
        </form>

        <div class="row text-center g-3">
            <div class="col-lg-3">
                <div class="">
                    <div class="block block-rounded mb-3">
                        <div class="block-content block-content-full d-flex align-items-center justify-content-between">
                            <div>
                                <i class="fa fa-2x fa-calendar text-muted"></i>
                            </div>
                            <dl class="ms-3 text-end mb-0">
                                <dt class="h3 fw-extrabold mb-0" id="days-present">
                                    0
                                </dt>
                                <dd class="fs-sm fw-medium text-muted mb-0">
                                    Days Present
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="block block-rounded mb-3">
                        <div class="block-content block-content-full d-flex align-items-center justify-content-between">
                            <div>
                                <i class="fa fa-2x fa-clock text-muted"></i>
                            </div>
                            <dl class="ms-3 text-end mb-0">
                                <dt class="h3 fw-extrabold mb-0" id="total-hours-worked">
                                    0
                                </dt>
                                <dd class="fs-sm fw-medium text-muted mb-0">
                                    Total Hours Worked
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>

                <div class="">
                    <div class="block block-rounded mb-3">
                        <div class="block-content block-content-full d-flex align-items-center justify-content-between">
                            <div>
                                <i class="fa fa-2x fa-hourglass-half text-muted"></i>
                            </div>
                            <dl class="ms-3 text-end mb-0">
                                <dt class="h3 fw-extrabold mb-0" id="average-work-hours">
                                    0
                                </dt>
                                <dd class="fs-sm fw-medium text-muted mb-0">
                                    Average Work Hours
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="block block-rounded mb-3">
                        <div class="block-content block-content-full d-flex align-items-center justify-content-between">
                            <div>
                                <i class="fa fa-2x fa-times-circle text-muted"></i>
                            </div>
                            <dl class="ms-3 text-end mb-0">
                                <dt class="h3 fw-extrabold mb-0" id="days-absent">
                                    0
                                </dt>
                                <dd class="fs-sm fw-medium text-muted mb-0">
                                    Days Absent
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="block block-rounded mb-3">
                        <div class="block-content block-content-full d-flex align-items-center justify-content-between">
                            <div>
                                <i class="fa fa-2x fa-user-clock text-muted"></i>
                            </div>
                            <dl class="ms-3 text-end mb-0">
                                <dt class="h3 fw-extrabold mb-0" id="late-arrivals">
                                    0
                                </dt>
                                <dd class="fs-sm fw-medium text-muted mb-0">
                                    Late Arrivals
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="block block-rounded mb-3">
                        <div class="block-content block-content-full d-flex align-items-center justify-content-between">
                            <div>
                                <i class="fa fa-2x fa-clock-rotate-left text-muted"></i>
                            </div>
                            <dl class="ms-3 text-end mb-0">
                                <dt class="h3 fw-extrabold mb-0" id="early-departures">
                                    0
                                </dt>
                                <dd class="fs-sm fw-medium text-muted mb-0">
                                    Early Departures
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9">

                <div class="block block-rounded" id="attendance-block">
                    <div class="block-content">

                        <div class="mb-4">
                            <div id="js-calendar"></div>
                        </div>

                    </div>
                </div>
            </div>




        </div>


        <script src="https://cdn.jsdelivr.net/npm/moment@2.30.1/moment.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/moment-timezone@0.5.45/moment-timezone.min.js"></script>
        <script>
            document.getElementById('employeeAttendance').addEventListener('submit', async function (event) {
                One.layout('header_loader_on');
                event.preventDefault(); // Prevent the form from submitting the traditional way

                const employeeId = document.getElementById('employee_uuid').value;
                // Update the HTML content with the fetched data
                document.getElementById('days-present').innerHTML = 'Loading';
                document.getElementById('early-departures').innerHTML = 'Loading';
                document.getElementById('late-arrivals').innerHTML = 'Loading';
                document.getElementById('total-hours-worked').innerHTML = 'Loading';
                document.getElementById('average-work-hours').innerHTML = 'Loading';
                document.getElementById('days-absent').innerHTML = 'Loading';
                try {
                    // Show loading indicator
                    toggleLoadingIndicator(true);
                    const response = await fetch('/admin/attendance/' + employeeId, {
                        method: 'GET',
                    });

                    const result = await response.json();

                    
                    if (result.success) {

                        // Update the HTML content with the fetched data
                        document.getElementById('days-absent').textContent = result.summaryData[0].total_days_absent;
                        document.getElementById('days-present').textContent = result.summaryData[0].total_days_present;
                        document.getElementById('early-departures').textContent = result.summaryData[0].total_early_departures;
                        document.getElementById('late-arrivals').textContent = result.summaryData[0].total_late_arrivals;
                        document.getElementById('total-hours-worked').textContent = result.summaryData[0].total_hours_worked ? parseFloat(result.summaryData[0].total_hours_worked).toFixed(2) : 0;
                        document.getElementById('average-work-hours').textContent = result.summaryData[0].average_work_hours !== null ? result.summaryData[0].average_work_hours.toFixed(2) : "0";
                        updateCalendarWithAttendance(result.data);
                    } else {
                        document.getElementById('days-present').innerHTML = '0';
                        document.getElementById('early-departures').innerHTML = '0';
                        document.getElementById('late-arrivals').innerHTML = '0';
                        document.getElementById('total-hours-worked').innerHTML = '0';
                        document.getElementById('average-work-hours').innerHTML = '0';
                        document.getElementById('days-absent').innerHTML = '0';

                        reRenderCalendar()
                        console.error('Failed to fetch attendance data');
                    }
                } catch (error) {
                    document.getElementById('days-present').innerHTML = '0';
                        document.getElementById('early-departures').innerHTML = '0';
                        document.getElementById('late-arrivals').innerHTML = '0';
                        document.getElementById('total-hours-worked').innerHTML = '0';
                        document.getElementById('average-work-hours').innerHTML = '0';
                        document.getElementById('days-absent').innerHTML = '0';
                    console.error('Error:', error);
                } finally {
                    One.layout('header_loader_off');
                    toggleLoadingIndicator(false);
                }
            });

            function reRenderCalendar() {
                if (window.calendar) {
                    // Clear existing events
                    window.calendar.removeAllEvents();
                    // Re-render the calendar to ensure updates are shown
                    window.calendar.render();
                }
            }

            function updateCalendarWithAttendance(data) {
    if (window.calendar) {
        // Clear existing events
        window.calendar.removeAllEvents();

        // Iterate through the attendance data and create events
        data.forEach(entry => {
            const logDate = entry.log_date;
            const datePart = moment(logDate).format('YYYY-MM-DD');

            // Parse time_in, time_out, break_in, and break_out
            const timeInDateTime = entry.time_in ? moment(`${datePart} ${entry.time_in}`, 'YYYY-MM-DD hh:mm:ss A') : null;
            const timeOutDateTime = entry.time_out ? moment(`${datePart} ${entry.time_out}`, 'YYYY-MM-DD hh:mm:ss A') : null;
            const breakInDateTime = entry.break_in ? moment(`${datePart} ${entry.break_in}`, 'YYYY-MM-DD hh:mm:ss A') : null;
            const breakOutDateTime = entry.break_out ? moment(`${datePart} ${entry.break_out}`, 'YYYY-MM-DD hh:mm:ss A') : null;

            // Add holiday event if applicable
            if (entry.holidayId !== null) {
                const holidayEvent = {
                    title: entry.description,
                    start: datePart,
                    allDay: true
                };
                window.calendar.addEvent(holidayEvent);
            }

            // Add time_in event
            if (entry.time_in) {
                const timeInEvent = {
                    title: `${entry.status_timein}`,
                    start: timeInDateTime.utc().format(),
                    color: entry.status_timein === 'late' ? '#e04f1a' : '#82b54b', // red for late, green for ontime/early
                    allDay: false
                };
                window.calendar.addEvent(timeInEvent);
            } else {
                // Add absent event
                const absentEvent = {
                    title: 'ABSENT',
                    start: datePart,
                    color: '#FF0000', // Red for absence
                    allDay: true
                };
                window.calendar.addEvent(absentEvent);
            }

            // Add time_out event
            if (entry.time_out) {
                const timeOutEvent = {
                    title: `${entry.status_timeout}`,
                    start: timeOutDateTime.utc().format(),
                    color: entry.status_timeout === 'ontime' ? '#82b54b' : '#e04f1a', // green for ontime, red for late
                    allDay: false
                };
                window.calendar.addEvent(timeOutEvent);
            }

            // Add break_in event
            if (entry.break_in) {
                const breakInEvent = {
                    title: 'Break In',
                    start: breakInDateTime.utc().format(),
                    color: '#FFA500', // Orange for break
                    allDay: false
                };
                window.calendar.addEvent(breakInEvent);
            }

            // Add break_out event
            if (entry.break_out) {
                const breakOutEvent = {
                    title: 'Break Out',
                    start: breakOutDateTime.utc().format(),
                    color: '#FFA500', // Orange for break
                    allDay: false
                };
                window.calendar.addEvent(breakOutEvent);
            }

            // Calculate total hours and check undertime
            if (entry.time_in && entry.time_out) {
                

                // Calculate total working hours
                const totalDuration = entry.total_hours;

                // Check if duration is less than 8 hours
                if (parseFloat(totalDuration)  < 8.00) {
                    const shortHoursEvent = {
                        title: 'UNDERTIME',
                        start: datePart,
                        color: '#FF0000', // Red for undertime
                        allDay: true
                    };
                    window.calendar.addEvent(shortHoursEvent);
                }
            }
        });

        // Re-render the calendar to show updates
        window.calendar.render();
    }
}

            // Convert 12-hour time format (with AM/PM) to 24-hour format
            function convertTo24HourFormat(time) {
                const [timeString, modifier] = time.split(' ');
                let [hours, minutes] = timeString.split(':');

                if (hours === '12') {
                    hours = modifier === 'AM' ? '00' : '12';
                } else if (modifier === 'PM') {
                    hours = (parseInt(hours, 10) + 12).toString().padStart(2, '0');
                }

                return `${hours}:${minutes}:00`; // Return in HH:MM:SS format
            }
            // Toggle loading indicator
            function toggleLoadingIndicator(isLoading) {
                const blockId = '#attendance-block';

                if (isLoading) {
                    // Show loading state
                    One.block('state_loading', blockId);
                } else {
                    // Hide loading state
                    One.block('state_normal', blockId);
                }
            }

        </script>